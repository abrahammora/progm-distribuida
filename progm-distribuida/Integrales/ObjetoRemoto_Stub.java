// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class ObjetoRemoto_Stub
    extends java.rmi.server.RemoteStub
    implements IObjetoRemoto, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_Resultado_0;
    private static java.lang.reflect.Method $method_Sin_1;
    private static java.lang.reflect.Method $method_init_h_2;
    private static java.lang.reflect.Method $method_init_x1_3;
    private static java.lang.reflect.Method $method_xcuadrada_4;
    
    static {
	try {
	    $method_Resultado_0 = IObjetoRemoto.class.getMethod("Resultado", new java.lang.Class[] {double.class, double.class});
	    $method_Sin_1 = IObjetoRemoto.class.getMethod("Sin", new java.lang.Class[] {double.class, double.class, double.class});
	    $method_init_h_2 = IObjetoRemoto.class.getMethod("init_h", new java.lang.Class[] {double.class, double.class});
	    $method_init_x1_3 = IObjetoRemoto.class.getMethod("init_x1", new java.lang.Class[] {double.class, double.class});
	    $method_xcuadrada_4 = IObjetoRemoto.class.getMethod("xcuadrada", new java.lang.Class[] {double.class, double.class, double.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ObjetoRemoto_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of Resultado(double, double)
    public double Resultado(double $param_double_1, double $param_double_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_Resultado_0, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2)}, 335705803417919530L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of Sin(double, double, double)
    public double Sin(double $param_double_1, double $param_double_2, double $param_double_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_Sin_1, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2), new java.lang.Double($param_double_3)}, 1108265767937768279L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of init_h(double, double)
    public double init_h(double $param_double_1, double $param_double_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_init_h_2, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2)}, 2981629532692937762L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of init_x1(double, double)
    public double init_x1(double $param_double_1, double $param_double_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_init_x1_3, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2)}, -8138052184524096851L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of xcuadrada(double, double, double)
    public double xcuadrada(double $param_double_1, double $param_double_2, double $param_double_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_xcuadrada_4, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2), new java.lang.Double($param_double_3)}, 8797379716222726477L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
