// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class ObjetoRemoto_Stub
    extends java.rmi.server.RemoteStub
    implements IObjetoRemoto, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_ConsultaSaldo_0;
    private static java.lang.reflect.Method $method_DepositaSaldo_1;
    private static java.lang.reflect.Method $method_ExisteCliente_2;
    private static java.lang.reflect.Method $method_ExisteNIP_3;
    private static java.lang.reflect.Method $method_Registrar_4;
    private static java.lang.reflect.Method $method_RetiraSaldo_5;
    
    static {
	try {
	    $method_ConsultaSaldo_0 = IObjetoRemoto.class.getMethod("ConsultaSaldo", new java.lang.Class[] {int.class});
	    $method_DepositaSaldo_1 = IObjetoRemoto.class.getMethod("DepositaSaldo", new java.lang.Class[] {int.class, double.class});
	    $method_ExisteCliente_2 = IObjetoRemoto.class.getMethod("ExisteCliente", new java.lang.Class[] {int.class});
	    $method_ExisteNIP_3 = IObjetoRemoto.class.getMethod("ExisteNIP", new java.lang.Class[] {int.class, int.class});
	    $method_Registrar_4 = IObjetoRemoto.class.getMethod("Registrar", new java.lang.Class[] {int.class, int.class, double.class});
	    $method_RetiraSaldo_5 = IObjetoRemoto.class.getMethod("RetiraSaldo", new java.lang.Class[] {int.class, double.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ObjetoRemoto_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of ConsultaSaldo(int)
    public double ConsultaSaldo(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_ConsultaSaldo_0, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 7971372315665470341L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of DepositaSaldo(int, double)
    public void DepositaSaldo(int $param_int_1, double $param_double_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_DepositaSaldo_1, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Double($param_double_2)}, -515929972490386885L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of ExisteCliente(int)
    public boolean ExisteCliente(int $param_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_ExisteCliente_2, new java.lang.Object[] {new java.lang.Integer($param_int_1)}, 7139983779030650072L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of ExisteNIP(int, int)
    public boolean ExisteNIP(int $param_int_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_ExisteNIP_3, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Integer($param_int_2)}, -2951915018275203544L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of Registrar(int, int, double)
    public boolean Registrar(int $param_int_1, int $param_int_2, double $param_double_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_Registrar_4, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Integer($param_int_2), new java.lang.Double($param_double_3)}, -2908891983307201102L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of RetiraSaldo(int, double)
    public void RetiraSaldo(int $param_int_1, double $param_double_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_RetiraSaldo_5, new java.lang.Object[] {new java.lang.Integer($param_int_1), new java.lang.Double($param_double_2)}, -4985801328220595114L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
