// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class ObjetoRemoto_Stub
    extends java.rmi.server.RemoteStub
    implements IObjetoRemoto, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_div_0;
    private static java.lang.reflect.Method $method_modu_1;
    private static java.lang.reflect.Method $method_multi_2;
    private static java.lang.reflect.Method $method_resta_3;
    private static java.lang.reflect.Method $method_suma_4;
    
    static {
	try {
	    $method_div_0 = IObjetoRemoto.class.getMethod("div", new java.lang.Class[] {double.class, double.class, double.class, double.class});
	    $method_modu_1 = IObjetoRemoto.class.getMethod("modu", new java.lang.Class[] {double.class, double.class, double.class, double.class});
	    $method_multi_2 = IObjetoRemoto.class.getMethod("multi", new java.lang.Class[] {double.class, double.class, double.class, double.class});
	    $method_resta_3 = IObjetoRemoto.class.getMethod("resta", new java.lang.Class[] {double.class, double.class, double.class, double.class});
	    $method_suma_4 = IObjetoRemoto.class.getMethod("suma", new java.lang.Class[] {double.class, double.class, double.class, double.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ObjetoRemoto_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of div(double, double, double, double)
    public java.lang.String div(double $param_double_1, double $param_double_2, double $param_double_3, double $param_double_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_div_0, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2), new java.lang.Double($param_double_3), new java.lang.Double($param_double_4)}, 3738411071711234182L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of modu(double, double, double, double)
    public double modu(double $param_double_1, double $param_double_2, double $param_double_3, double $param_double_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_modu_1, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2), new java.lang.Double($param_double_3), new java.lang.Double($param_double_4)}, 9134168772135412716L);
	    return ((java.lang.Double) $result).doubleValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of multi(double, double, double, double)
    public java.lang.String multi(double $param_double_1, double $param_double_2, double $param_double_3, double $param_double_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_multi_2, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2), new java.lang.Double($param_double_3), new java.lang.Double($param_double_4)}, -5348713831848898745L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of resta(double, double, double, double)
    public java.lang.String resta(double $param_double_1, double $param_double_2, double $param_double_3, double $param_double_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_resta_3, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2), new java.lang.Double($param_double_3), new java.lang.Double($param_double_4)}, 3803888015494451200L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of suma(double, double, double, double)
    public java.lang.String suma(double $param_double_1, double $param_double_2, double $param_double_3, double $param_double_4)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_suma_4, new java.lang.Object[] {new java.lang.Double($param_double_1), new java.lang.Double($param_double_2), new java.lang.Double($param_double_3), new java.lang.Double($param_double_4)}, 2699219630415983369L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
